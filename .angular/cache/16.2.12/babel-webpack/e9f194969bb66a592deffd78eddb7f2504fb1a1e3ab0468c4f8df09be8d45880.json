{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass NewsletterService {\n  constructor(http) {\n    this.http = http;\n  }\n  createNewsletter(data) {\n    return this.http.post(`${environment.apiBaseUrl}/api/newsletter`, data);\n  }\n  static #_ = this.ɵfac = function NewsletterService_Factory(t) {\n    return new (t || NewsletterService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: NewsletterService,\n    factory: NewsletterService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { NewsletterService };","map":{"version":3,"names":["environment","NewsletterService","constructor","http","createNewsletter","data","post","apiBaseUrl","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ExpectoPatronum\\Desktop\\NewsProject\\UI\\newsletter\\src\\app\\features\\newsletter\\services\\newsletter.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { AddNewsletter } from '../models/add-newsletter.model';\nimport { Observable } from 'rxjs';\nimport { Newsletter } from '../models/newsletter.model';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NewsletterService {\n\n  constructor(private http: HttpClient) { }\n\n  createNewsletter(data: AddNewsletter): Observable<Newsletter>{\n    return this.http.post<Newsletter>(`${environment.apiBaseUrl}/api/newsletter`, data);\n  }\n}\n"],"mappings":"AAKA,SAASA,WAAW,QAAQ,8BAA8B;;;AAE1D,MAGaC,iBAAiB;EAE5BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,gBAAgBA,CAACC,IAAmB;IAClC,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAa,GAAGN,WAAW,CAACO,UAAU,iBAAiB,EAAEF,IAAI,CAAC;EACrF;EAAC,QAAAG,CAAA,G;qBANUP,iBAAiB,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAjBZ,iBAAiB;IAAAa,OAAA,EAAjBb,iBAAiB,CAAAc,IAAA;IAAAC,UAAA,EAFhB;EAAM;;SAEPf,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/category.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction EditCategoryComponent_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"form\")(2, \"div\", 4)(3, \"div\", 1)(4, \"label\", 5);\n    i0.ɵɵtext(5, \"Category Id\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"input\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 1)(8, \"label\", 7);\n    i0.ɵɵtext(9, \"Category Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"input\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 1)(12, \"label\", 9);\n    i0.ɵɵtext(13, \"Category Url Handle\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(14, \"input\", 10);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵpropertyInterpolate(\"value\", ctx_r0.category.id);\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"value\", ctx_r0.category.name);\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"value\", ctx_r0.category.urlHandle);\n  }\n}\nfunction EditCategoryComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1, \" Category not found! \");\n    i0.ɵɵelementEnd();\n  }\n}\nclass EditCategoryComponent {\n  constructor(route, categoryService) {\n    this.route = route;\n    this.categoryService = categoryService;\n    this.id = null;\n  }\n  ngOnInit() {\n    this.paramsSubscription = this.route.paramMap.subscribe({\n      next: params => {\n        this.id = params.get('id');\n        if (this.id) {\n          //get the data from the API for this category Id\n          this.categoryService.getCategoryById(this.id).subscribe({\n            next: response => {\n              this.category = response;\n            }\n          });\n        }\n      }\n    });\n  }\n  ngOnDestroy() {\n    this.paramsSubscription?.unsubscribe();\n  }\n  static #_ = this.ɵfac = function EditCategoryComponent_Factory(t) {\n    return new (t || EditCategoryComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.CategoryService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditCategoryComponent,\n    selectors: [[\"app-edit-category\"]],\n    decls: 6,\n    vars: 2,\n    consts: [[1, \"conrainer\"], [1, \"mt-3\"], [4, \"ngIf\", \"ngIfElse\"], [\"notFound\", \"\"], [1, \"mt-2\"], [\"for\", \"categoryId\"], [\"type\", \"text\", \"disabled\", \"\", \"id\", \"categoryId\", \"name\", \"categoryId\", 1, \"form-control\", 3, \"value\"], [\"for\", \"categoryName\"], [\"type\", \"text\", \"disabled\", \"\", \"id\", \"categoryName\", \"name\", \"categoryName\", 1, \"form-control\", 3, \"value\"], [\"for\", \"categoryUrlHandle\"], [\"type\", \"text\", \"disabled\", \"\", \"id\", \"categoryUrlHandle\", \"name\", \"categoryUrlHandle\", 1, \"form-control\", 3, \"value\"], [\"role\", \"alert\", 1, \"alert\", \"alert-warning\"]],\n    template: function EditCategoryComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n        i0.ɵɵtext(2, \"Edit Category\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, EditCategoryComponent_ng_container_3_Template, 15, 3, \"ng-container\", 2);\n        i0.ɵɵtemplate(4, EditCategoryComponent_ng_template_4_Template, 2, 0, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(5);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.category)(\"ngIfElse\", _r1);\n      }\n    },\n    dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { EditCategoryComponent };","map":{"version":3,"names":["i0","ɵɵelementContainerStart","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵelementContainerEnd","ɵɵadvance","ɵɵpropertyInterpolate","ctx_r0","category","id","name","urlHandle","EditCategoryComponent","constructor","route","categoryService","ngOnInit","paramsSubscription","paramMap","subscribe","next","params","get","getCategoryById","response","ngOnDestroy","unsubscribe","_","ɵɵdirectiveInject","i1","ActivatedRoute","i2","CategoryService","_2","selectors","decls","vars","consts","template","EditCategoryComponent_Template","rf","ctx","ɵɵtemplate","EditCategoryComponent_ng_container_3_Template","EditCategoryComponent_ng_template_4_Template","ɵɵtemplateRefExtractor","ɵɵproperty","_r1"],"sources":["C:\\Users\\ExpectoPatronum\\Desktop\\NewsProject\\UI\\newsletter\\src\\app\\features\\category\\edit-category\\edit-category.component.ts","C:\\Users\\ExpectoPatronum\\Desktop\\NewsProject\\UI\\newsletter\\src\\app\\features\\category\\edit-category\\edit-category.component.html"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { CategoryService } from '../services/category.service';\nimport { Category } from '../models/category.model';\n\n@Component({\n  selector: 'app-edit-category',\n  templateUrl: './edit-category.component.html',\n  styleUrls: ['./edit-category.component.css']\n})\nexport class EditCategoryComponent implements OnInit, OnDestroy{\n  id: string | null = null;\n  paramsSubscription?: Subscription;\n  category?: Category;\n\n  constructor(private route: ActivatedRoute,\n    private categoryService: CategoryService) {\n  }\n \n  ngOnInit(): void {\n    this.paramsSubscription = this.route.paramMap.subscribe({\n      next: (params) => {\n        this.id = params.get('id');\n        if(this.id){\n          //get the data from the API for this category Id\n          this.categoryService.getCategoryById(this.id)\n          .subscribe({\n            next:(response) => {\n              this.category = response;\n            }\n          });\n        }\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.paramsSubscription?.unsubscribe();\n  }\n}\n","<div class=\"conrainer\">\r\n    <h1 class=\"mt-3\">Edit Category</h1>\r\n\r\n    <ng-container *ngIf=\"category;else notFound\">\r\n        <form>\r\n            <div class=\"mt-2\">\r\n                <div class=\"mt-3\">\r\n                    <label for=\"categoryId\">Category Id</label>\r\n                    <input type=\"text\" disabled\r\n                    id=\"categoryId\"\r\n                    class=\"form-control\"\r\n                    name=\"categoryId\"\r\n                    value=\"{{category.id}}\">\r\n                </div>\r\n\r\n                <div class=\"mt-3\">\r\n                    <label for=\"categoryName\">Category Name</label>\r\n                    <input type=\"text\" disabled\r\n                    id=\"categoryName\"\r\n                    class=\"form-control\"\r\n                    name=\"categoryName\"\r\n                    value=\"{{category.name}}\">\r\n                </div>\r\n\r\n                <div class=\"mt-3\">\r\n                    <label for=\"categoryUrlHandle\">Category Url Handle</label>\r\n                    <input type=\"text\" disabled\r\n                    id=\"categoryUrlHandle\"\r\n                    class=\"form-control\"\r\n                    name=\"categoryUrlHandle\"\r\n                    value=\"{{category.urlHandle}}\">\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </ng-container>\r\n\r\n    <ng-template #notFound>\r\n        <div class=\"alert alert-warning\" role=\"alert\">\r\n            Category not found!\r\n          </div>\r\n    </ng-template>\r\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
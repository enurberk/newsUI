{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass CategoryService {\n  constructor(http) {\n    this.http = http;\n    this.urlPath = \"http://localhost:5284\";\n  }\n  addCategory(model) {\n    return this.http.post(this.urlPath + `/api/categories`, model);\n  }\n  getAllCategories() {\n    return this.http.get(this.urlPath + `/api/Categories`);\n  }\n  static #_ = this.ɵfac = function CategoryService_Factory(t) {\n    return new (t || CategoryService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CategoryService,\n    factory: CategoryService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { CategoryService };","map":{"version":3,"names":["CategoryService","constructor","http","urlPath","addCategory","model","post","getAllCategories","get","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ExpectoPatronum\\Desktop\\NewsProject\\UI\\newsletter\\src\\app\\features\\category\\services\\category.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { AddCategoryRequest } from '../models/add-category-request.model';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Category } from '../models/category.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n\n  urlPath: string = \"http://localhost:5284\";\n  constructor(private http: HttpClient) { }\n\n  addCategory(model: AddCategoryRequest): Observable<void>{\n    return this.http.post<void>(this.urlPath +`/api/categories`, model);\n  }\n\n  getAllCategories(): Observable<Category[]> {\n    return this.http.get<Category[]>(this.urlPath + `/api/Categories`);\n  }\n}\n"],"mappings":";;AAMA,MAGaA,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IADxB,KAAAC,OAAO,GAAW,uBAAuB;EACD;EAExCC,WAAWA,CAACC,KAAyB;IACnC,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAO,IAAI,CAACH,OAAO,GAAE,iBAAiB,EAAEE,KAAK,CAAC;EACrE;EAEAE,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAa,IAAI,CAACL,OAAO,GAAG,iBAAiB,CAAC;EACpE;EAAC,QAAAM,CAAA,G;qBAXUT,eAAe,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfd,eAAe;IAAAe,OAAA,EAAff,eAAe,CAAAgB,IAAA;IAAAC,UAAA,EAFd;EAAM;;SAEPjB,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}